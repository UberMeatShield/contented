name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  angular:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install dependencies
      run: yarn install

    - name: Copy in the Monaco Editor
      run: make monaco-copy

    - name: Run Angular tests
      run: yarn run ng test --watch=false --browsers=ChromeHeadless

    - name: Run linter
      run: yarn run lint

  golang:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13-alpine3.17
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'

    - name: Install dependencies
      run: go mod download

    # TODO: Potentially need to install ffmpeg in the CI from the prebuilt binary vs the ubuntu package (slow)
    - name: Install ffmpeg
      run: sudo apt-get update && sudo apt-get install ffmpeg
    
    - name: Fake a typescript build of the index.html
      run: mkdir -p public/build && echo "Loading Up Contented" > public/build/index.html

    - name: Run Go tests
      run: make test
      env:
        GO_ENV: test
        DB_HOST: localhost
        DB_PORT: 5432
        DB_USER: postgres
        DB_PASSWORD: ''
        DB_NAME: content_test


