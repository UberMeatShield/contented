# Place under /etc/systemd/system/contented.service.d/
# This file is a Jinja2 template for Environment variables

[Service]
# Default values if not set in group_vars
Environment="PATH=/usr/local/ffmpeg/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin"
Environment="ADDR={{ contented_addr | default('127.0.0.1') }}"
Environment="GO_ENV={{ contented_go_env | default('production') }}"
Environment="SESSION_SECRET={{ contented_session_secret | default('dsf90ds8f9s0d8fds') }}"
Environment="LIMIT={{ contented_limit | default('5000') }}"
Environment="USE_DATABASE={{ contented_use_database | default('false') }}"
Environment="CONTENT_DIR={{ contented_content_dir | default('/home/contented_user/media') }}"
Environment="STATIC_RESOURCE_PATH={{ contented_static_resource_path | default('/home/contented_user/contented/public/build') }}"
Environment="STATIC_LIBRARY_PATH={{ contented_static_library_path | default('/home/contented_user/contented/public/static') }}"
Environment="TAG_FILE={{ contented_tag_file | default('/home/contented_user/tags.txt') }}"
Environment="INCLUDE_MEDIA_MATCH={{ contented_include_media_match | default('') }}"
Environment="INCLUDE_TYPES_MATCH={{ contented_include_types_match | default('image|video|text|audio') }}"
Environment="INCLUDE_OPERATOR={{ contented_include_operator | default('AND') }}"
Environment="EXCLUDE_MEDIA_MATCH={{ contented_exclude_media_match | default('DS_Store') }}"
Environment="EXCLUDE_TYPES_MATCH={{ contented_exclude_types_match | default('') }}"
Environment="EXCLUDE_OPERATOR={{ contented_exclude_operator | default('AND') }}"

# When searching the tree it will only include or exclude these containers.
# Note that if you exclude it then it will not search under that container either.
Environment="INCLUDE_CONTAINER_MATCH={{ contented_include_container_match | default('') }}"
Environment="EXCLUDE_CONTAINER_MATCH={{ contented_exclude_container_match | default('container_previews|DS_Store') }}"

# If true then any container found not containing any media will be skipped.  This will
# NOT prevent subcontainers (dirs) under this container from being included if they have media.
Environment="EXCLUDE_EMPTY_CONTAINERS={{ contented_exclude_empty_containers | default('true') }}"

# Loading modifiers that alter how content is discovered.  Search depth determines how many
# directories down to look, exclude empty will not show containers without media, and the max
# will give up adding media in a single container past that limit.
Environment="MAX_SEARCH_DEPTH={{ contented_max_search_depth | default('1') }}"
Environment="MAX_MEDIA_PER_CONTAINER={{ contented_max_media_per_container | default('90001') }}"

# When running the preview task make a preview if the file is > this size
Environment="CREATE_PREVIEW_SIZE={{ contented_create_preview_size | default('1024000') }}"
Environment="READ_ONLY={{ contented_read_only | default('false') }}"

# Over a certain size it is faster to seek screen when creating gif vs running a filter
# on the entire video.  This can also make creating a palette faster (smaller output).
Environment="SEEK_SCREEN_OVER_SIZE={{ contented_seek_screen_over_size | default('7168000') }}"

# Options are gif|screens|png gif is about a 30 frame over total length,
# screens is a set of TOTAL_SCREENS image previews evenly distributed through the 
# length of the video png is a single image taken about 10s in
Environment="PREVIEW_VIDEO_TYPE={{ contented_preview_video_type | default('screens') }}"

# If we are using "screens" for PREVIEW_VIDEO_TYPE how many should be created by default
Environment="TOTAL_SCREENS={{ contented_total_screens | default('12') }}"

# Also for "screens" for PREVIEW_VIDEO_TYPE how much of the initial video should skip before the first screen 
Environment="FIRST_SCREEN_OFFSET={{ contented_first_screen_offset | default('4') }}"

# IMPORTANT: For ffmpeg using pallete gen it looks in the range 0-4 so 4 is the largest to skip, we could use
# glob but that will seemingly never work on windows.  ie: -pattern_type glob -i '*.png'
Environment="FIRST_SCREEN_OFFSET={{ contented_first_screen_offset | default('4') }}"

# If a preview fails to create stop instead of progressing to the next media, if an item
# fails to preview then Corrupt=True will be set on the Media.
Environment="PREVIEW_CREATE_FAIL_IS_FATAL={{ contented_preview_create_fail_is_fatal | default('false') }}"

# Core count is how many processors are going to be available (used when creating previews)
Environment="CORE_COUNT={{ contented_core_count | default('4') }}"

# Provide these to change video encodings using task db:encode
Environment="CODECS_TO_CONVERT={{ contented_codecs_to_convert | default('.*') }}"
Environment="CODECS_TO_IGNORE={{ contented_codecs_to_ignore | default('hevc') }}"
Environment="CODEC_FOR_CONVERSION={{ contented_codec_for_conversion | default('libx265') }}"

# Optional path for the final destination of an encoded file
Environment="ENCODING_DESTINATION={{ contented_encoding_destination | default('') }}"

# TODO: Add in options for removing files we successfully encoded?

# Splash page configuration (home)
Environment="SPLASH_CONTAINER_NAME={{ contented_splash_container_name | default('splash') }}"
Environment="SPLASH_RENDERER_TYPE={{ contented_splash_renderer_type | default('video') }}"
Environment="SPLASH_HTML_FILE={{ contented_splash_content_html | default('/home/contented_user/splash.html') }}"
Environment="SPLASH_TITLE={{ contented_splash_title | default('Splash Title') }}"